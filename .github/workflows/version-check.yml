name: 🗃️ Version Check

on:
  workflow_call:
    inputs:
      environment:
        description: 'Environment being deployed to'
        required: true
        type: string
    outputs:
      should-deploy:
        description: 'Whether deployment should proceed'
        value: ${{ jobs.version-check.outputs.should-deploy }}
      current-version:
        description: 'Current version from package.json'
        value: ${{ jobs.version-check.outputs.current-version }}
      is-new-version:
        description: 'Whether this is a new version'
        value: ${{ jobs.version-check.outputs.is-new-version }}

jobs:
  version-check:
    name: Check Version
    runs-on: ubuntu-latest
    outputs:
      should-deploy: ${{ steps.check.outputs.should-deploy }}
      current-version: ${{ steps.check.outputs.current-version }}
      is-new-version: ${{ steps.check.outputs.is-new-version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Get current version
        id: version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "current-version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $CURRENT_VERSION"

      - name: Check if version exists in GitHub releases
        id: check
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "current-version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

          # Check if this version already exists as a Git tag
          if git tag -l | grep -q "^v$CURRENT_VERSION$"; then
            echo "❌ Version v$CURRENT_VERSION already exists as a Git tag!"
            echo "should-deploy=false" >> $GITHUB_OUTPUT
            echo "is-new-version=false" >> $GITHUB_OUTPUT
            exit 1
          fi

          # Check if this version exists in GitHub releases
          RELEASE_EXISTS=$(gh release view "v$CURRENT_VERSION" --json tagName 2>/dev/null || echo "null")

          if [ "$RELEASE_EXISTS" != "null" ]; then
            echo "❌ Version v$CURRENT_VERSION already exists in GitHub releases!"
            echo "🔗 Release URL: https://github.com/${{ github.repository }}/releases/tag/v$CURRENT_VERSION"
            echo "should-deploy=false" >> $GITHUB_OUTPUT
            echo "is-new-version=false" >> $GITHUB_OUTPUT
            exit 1
          fi

          echo "✅ Version v$CURRENT_VERSION is new and ready for deployment"
          echo "should-deploy=true" >> $GITHUB_OUTPUT
          echo "is-new-version=true" >> $GITHUB_OUTPUT

      - name: Version Check Summary
        if: always()
        run: |
          echo "📦 Current Version: ${{ steps.check.outputs.current-version }}"
          echo "🆕 Is New Version: ${{ steps.check.outputs.is-new-version }}"
          echo "🚀 Should Deploy: ${{ steps.check.outputs.should-deploy }}"
          echo "🏠 Environment: ${{ inputs.environment }}"
