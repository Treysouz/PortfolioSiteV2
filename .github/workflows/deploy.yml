name: ðŸš€ Deploy

on:
  workflow_call:
    inputs:
      environment:
        description: 'Environment to deploy to (Preview/Production)'
        required: true
        type: string
      production:
        description: 'Deploy to production'
        required: false
        default: false
        type: boolean
    outputs:
      deployment-url:
        description: 'Deployment URL'
        value: ${{ jobs.deploy.outputs.deployment-url }}

jobs:
  deploy:
    name: Deploy to ${{ inputs.environment }}
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}
      url: ${{ steps.set-url.outputs.deployment-url }}
    outputs:
      deployment-url: ${{ steps.set-url.outputs.deployment-url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'

      - name: Cache node_modules
        id: cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}

      - name: Deploy (Preview)
        if: inputs.production == false
        id: deploy-preview
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy .svelte-kit/cloudflare --project-name=portfolio-site

      - name: Deploy (Production)
        if: inputs.production == true
        id: deploy-production
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy .svelte-kit/cloudflare --project-name=portfolio-site --branch=main

      - name: Set deployment URL
        id: set-url
        run: |
          PROJECT_NAME="portfolio-site"
          if [ "${{ inputs.production }}" = "true" ]; then
            echo "deployment-url=https://${PROJECT_NAME}.pages.dev" >> $GITHUB_OUTPUT
          else
            # For preview deployments, construct the URL with the commit hash
            COMMIT_HASH="${{ github.sha }}"
            SHORT_HASH="${COMMIT_HASH:0:8}"
            echo "deployment-url=https://${SHORT_HASH}.${PROJECT_NAME}.pages.dev" >> $GITHUB_OUTPUT
          fi
